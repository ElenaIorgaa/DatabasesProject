CREATE TABLE elevi (
    id_elev            NUMBER(6, 2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 NOCACHE ORDER )
    NOT NULL,
    statut             VARCHAR2(15 CHAR) DEFAULT 'incepator' NOT NULL,
    nume               VARCHAR2(9 CHAR) NOT NULL,
    prenume            VARCHAR2(9 CHAR) NOT NULL,
    varsta             NUMBER(6, 2) NOT NULL,
    grupe_id_grupa     NUMBER(6, 2) NOT NULL,
    grupe_sali_id_sala NUMBER(6, 2) NOT NULL
)
LOGGING;



ALTER TABLE elevi
    ADD CONSTRAINT statut_elev_check CHECK ( statut IN ( 'avansat', 'incepator', 'mediu', 'profesionist' ) );

ALTER TABLE elevi
    ADD CONSTRAINT varsta_check CHECK ( varsta BETWEEN 4 AND 30 );

ALTER TABLE elevi
    ADD CONSTRAINT elevi_pk PRIMARY KEY ( id_elev,
                                          grupe_id_grupa,
                                          grupe_sali_id_sala );
                                          
ALTER TABLE elevi ADD CONSTRAINT elevi_nume_ck CHECK (
       length(nume) > 1);
ALTER TABLE elevi ADD CONSTRAINT elevi_prenume_ck CHECK (
       length(prenume) > 1);

ALTER TABLE elevi ADD CONSTRAINT elevi_prenume2_ck CHECK (
       prenume not like '%[^A-Z]%'); 
ALTER TABLE elevi ADD CONSTRAINT elevi_nume2_ck CHECK (
       nume not like '%[^A-Z]%'); 

CREATE TABLE elevi_spectacol (
    elevi_id_elev           NUMBER(6, 2) NOT NULL,
    elevi_id_grupa          NUMBER(6, 2) NOT NULL,
    elevi_id_sala           NUMBER(6, 2) NOT NULL,
    spectacole_id_spectacol NUMBER(6, 2) NOT NULL
)
LOGGING;

ALTER TABLE elevi_spectacol
    ADD CONSTRAINT relation_4_pk PRIMARY KEY ( elevi_id_elev,
                                               elevi_id_grupa,
                                               elevi_id_sala,
                                               spectacole_id_spectacol );

CREATE TABLE grupe (
    id_grupa     NUMBER(6, 2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 NOCACHE ORDER )
    NOT NULL,
    statut       VARCHAR2(15 CHAR) DEFAULT 'incepatori' NOT NULL,
    sali_id_sala NUMBER(6, 2) NOT NULL
)
LOGGING;

ALTER TABLE grupe
    ADD CONSTRAINT statut_grupa_check CHECK ( statut IN ( 'avansati', 'incepatori', 'mediu', 'profesionisti' ) );

ALTER TABLE grupe ADD CONSTRAINT grupe_pk PRIMARY KEY ( id_grupa,
                                                        sali_id_sala );
                                                        


CREATE TABLE instructori (
    id_instructor      NUMBER(6)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 NOCACHE ORDER )
    NOT NULL,
    nume               VARCHAR2(9 CHAR) NOT NULL,
    prenume            VARCHAR2(9 CHAR) NOT NULL,
    statut             VARCHAR2(15 CHAR) DEFAULT 'incepator' NOT NULL,
    experienta         NUMBER(6, 2) DEFAULT 0,
    grupe_id_grupa     NUMBER(6, 2) NOT NULL,
    grupe_sali_id_sala NUMBER(6, 2) NOT NULL
)
LOGGING;

ALTER TABLE instructori
    ADD CONSTRAINT statut_check_instructor CHECK ( statut IN ( 'avansat', 'incepator', 'mediu', 'profesionist' ) );
ALTER TABLE instructori ADD CONSTRAINT instructori_nume_ck CHECK (
       length(nume) > 1);
ALTER TABLE instructori ADD CONSTRAINT instructori_prenume_ck CHECK (
       length(prenume) > 1);
ALTER TABLE instructori ADD CONSTRAINT experienta_instructrori_check CHECK ( experienta > 0 );

ALTER TABLE instructori ADD CONSTRAINT instructori_prenume2_ck CHECK (
       prenume not like '%[^A-Z]%'); 
ALTER TABLE instructori ADD CONSTRAINT instructori_nume2_ck CHECK (
       nume not like '%[^A-Z]%'); 
       
       
CREATE UNIQUE INDEX instructor__idx ON
    instructori (
        grupe_id_grupa
    ASC,
        grupe_sali_id_sala
    ASC )
        LOGGING;

ALTER TABLE instructori ADD CONSTRAINT instructor_pk PRIMARY KEY ( id_instructor );

CREATE TABLE pianisti (
    id_pianist         NUMBER(6)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    nume               VARCHAR2(9 CHAR) NOT NULL,
    prenume            VARCHAR2(9 CHAR) NOT NULL,
    statut             VARCHAR2(15 CHAR) DEFAULT 'incepator' NOT NULL,
    experienta         NUMBER(6, 2) DEFAULT 0,
    grupe_id_grupa     NUMBER(6, 2) NOT NULL,
    grupe_sali_id_sala NUMBER(6, 2) NOT NULL
)
LOGGING;

ALTER TABLE pianisti
    ADD CONSTRAINT statut_pianist_check CHECK ( statut IN ( 'avansat', 'incepator', 'mediu', 'profesionist' ) );

ALTER TABLE pianisti ADD CONSTRAINT experienta_pianisti_check CHECK ( experienta > 0 );


ALTER TABLE pianisti ADD CONSTRAINT pianisti_nume_ck CHECK (
       length(nume) > 1);
ALTER TABLE pianisti ADD CONSTRAINT pianisti_prenume_ck CHECK (
       length(prenume) > 1);

ALTER TABLE pianisti ADD CONSTRAINT pianisti_prenume2_ck CHECK (
       prenume not like '%[^A-Z]%'); 
ALTER TABLE pianisti ADD CONSTRAINT pianisti_nume2_ck CHECK (
       nume not like '%[^A-Z]%'); 
       
CREATE UNIQUE INDEX pianist__idx ON
    pianisti (
        grupe_id_grupa
    ASC,
        grupe_sali_id_sala
    ASC )
        LOGGING;

ALTER TABLE pianisti ADD CONSTRAINT pianist_pk PRIMARY KEY ( id_pianist );

CREATE TABLE sali (
    id_sala     NUMBER(6, 2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 10 NOCACHE ORDER )
    NOT NULL,
    dimensiune  NUMBER(6, 2) NOT NULL,
    capacitate  NUMBER(6) NOT NULL
)
LOGGING;

ALTER TABLE sali ADD CONSTRAINT dimensiune_sala_check CHECK ( dimensiune > 10 );

ALTER TABLE sali
    ADD CONSTRAINT check_capacitate CHECK ( capacitate BETWEEN 0 AND 10 );

ALTER TABLE sali ADD CONSTRAINT sali_pk PRIMARY KEY ( id_sala );

CREATE TABLE spectacole (
    id_spectacol   NUMBER(6, 2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 NOCACHE ORDER )
    NOT NULL,
    nume_spectacol VARCHAR2(50 CHAR) NOT NULL,
    capacitate     NUMBER(6, 2) DEFAULT 0 NOT NULL,
    data_spectacol DATE DEFAULT sysdate NOT NULL
)
LOGGING;

ALTER TABLE spectacole
    ADD CONSTRAINT capacitate_spectacol_check CHECK ( capacitate BETWEEN 0 AND 10 );

ALTER TABLE spectacole ADD CONSTRAINT spectacole_pk PRIMARY KEY ( id_spectacol );

ALTER TABLE spectacole ADD CONSTRAINT spectacole_nume_spectacol_un UNIQUE ( nume_spectacol );

ALTER TABLE elevi
    ADD CONSTRAINT elevi_grupe_fk FOREIGN KEY ( grupe_id_grupa,
                                                grupe_sali_id_sala )
        REFERENCES grupe ( id_grupa,
                           sali_id_sala )
    NOT DEFERRABLE;

ALTER TABLE elevi_spectacol
    ADD CONSTRAINT elevi_spectacol_elevi_fk FOREIGN KEY ( elevi_id_elev,
                                                          elevi_id_grupa,
                                                          elevi_id_sala )
        REFERENCES elevi ( id_elev,
                           grupe_id_grupa,
                           grupe_sali_id_sala )
    NOT DEFERRABLE;

ALTER TABLE elevi_spectacol
    ADD CONSTRAINT elevi_spectacol_spectacole_fk FOREIGN KEY ( spectacole_id_spectacol )
        REFERENCES spectacole ( id_spectacol )
    NOT DEFERRABLE;

ALTER TABLE grupe
    ADD CONSTRAINT grupe_sali_fk FOREIGN KEY ( sali_id_sala )
        REFERENCES sali ( id_sala )
    NOT DEFERRABLE;

ALTER TABLE instructori
    ADD CONSTRAINT instructori_grupe_fk FOREIGN KEY ( grupe_id_grupa,
                                                      grupe_sali_id_sala )
        REFERENCES grupe ( id_grupa,
                           sali_id_sala )
    NOT DEFERRABLE;

ALTER TABLE pianisti
    ADD CONSTRAINT pianisti_grupe_fk FOREIGN KEY ( grupe_id_grupa,
                                                   grupe_sali_id_sala )
        REFERENCES grupe ( id_grupa,
                           sali_id_sala )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER TRG_DATA_SPECTACOL 
    BEFORE INSERT OR UPDATE ON Spectacole 
    FOR EACH ROW 
BEGIN 
  IF(:new.data_spectacol>=SYSDATE)
  THEN
    RAISE_APPLICATION_ERROR(-20001, 'Data invalida'||TO_CHAR(:new.data_spectacol,'DD.MM.YYYY HH24:MI:SS')||' trebuie sa fe mai mica decat data curenta.');
  END IF;
END; 
/


CREATE TABLE users( id_user VARCHAR2(20), 
		    parola VARCHAR2(20));
ALTER TABLE users ADD CONSTRAINT users_pk PRIMARY KEY ( id_user );
